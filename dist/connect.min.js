var l=(t,r,e)=>new Promise((a,s)=>{var i=n=>{try{c(e.next(n))}catch(d){s(d)}},p=n=>{try{c(e.throw(n))}catch(d){s(d)}},c=n=>n.done?a(n.value):Promise.resolve(n.value).then(i,p);c((e=e.apply(t,r)).next())});const u="https://api.passwordless.id";export function auth(t){return l(this,null,function*(){var e,a,s;const r=new URLSearchParams({scope:(e=t.scope)!=null?e:"openid",response_type:(a=t.response_type)!=null?a:"id_token",client_id:window.location.origin,redirect_uri:(s=t.response_type)!=null?s:window.location.href,nonce:t.nonce,state:t.state});window.location.assign(`${u}/openid/authorize?${r}`)})}const w=new TextDecoder;export function request(t){return l(this,null,function*(){var s;const r=new URLSearchParams({scope:(s=t.scope)!=null?s:"openid",nonce:t.nonce}),e=yield fetch(`${u}/openid/id_token?${r}`,{mode:"cors",credentials:"include"}),a={};if(e.ok){const i=yield e.json(),c=i.id_token.split(".")[1].replaceAll("-","+").replaceAll("_","/"),n=Uint8Array.from(atob(c),f=>f.charCodeAt(0)),d=w.decode(n),o=JSON.parse(d);return delete o.iss,delete o.aud,delete o.iat,delete o.exp,console.debug(o),{signedIn:!0,scopeGranted:!0,id_token:i.id_token,profile:o}}else{if(e.status===401)return{signedIn:!1,scopeGranted:!1};if(e.status===403)return{signedIn:!0,scopeGranted:!1};throw Error(`Unexpected error: ${e.status} ${yield e.text()}`)}})}export default{auth,request};
//# sourceMappingURL=connect.min.js.map
